% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme-elements.r
\name{add_element}
\alias{add_element}
\alias{get_elements}
\title{Add User Element to Element Tree}
\usage{
add_element(k, v)

get_elements()
}
\arguments{
\item{k}{the character index (key) for the element,
must be not present in the fixed (reserved) list of elements for the base ggplot2 package,
and an error will be thrown if either k is not a character of length 1, or k is protected.}

\item{v}{the \code{\link{el_def}} object (value) that the user wishes to create.}
}
\description{
\code{add_element} is a function that adds a user defined element, to the element tree,
if it does not conflict with the default element tree required for the
functioning of base \code{ggplot2}.

\code{get_elements} is a function that returns the complete list of elements,
forming the fixed and user defined (if present) elements comprising the element tree.
}
\examples{
#1. Add a single element
add_element('mycustomtitle',el_def("element_text", "title"))

#Without adding the element above, the following would otherwise throw an error,
#reporting 'mycustomtitle' is not a valid theme element
mytheme = theme(mycustomtitle = element_text())

#Try to add a reserved name, will throw an error, protecting functionality of base ggplot2
\dontrun{add_element('plot.title',el_def('element_text','title'))}

#2. Element Tree is based of R6 Class, Has been designed so that chaining is possible
add_element('A',el_def('element_text', 'title'))$add_element('B',el_def('element_rect','rect'))$add_element('C',el_def('element_line','line'))

#Likewise, without adding the elements above, the following would otherwise throw the same error.
mytheme = theme(A = element_text(),
                B = element_rect(),
                C = element_line())

}
\author{
Nicholas Hamilton, UNSW Sydney
}

